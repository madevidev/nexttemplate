import { AnyType, Args } from './index';
export type ConverterConfig = {
    defaultNullability?: boolean;
};
export declare function convertSchema({ types, resolvers }: {
    types: AnyType[];
    resolvers?: any;
}, config?: ConverterConfig): import("graphql").GraphQLSchema;
export declare function getFieldType(type: AnyType, config: ConverterConfig): any;
export declare function convertToGraphqlType(name: string, type: AnyType, config: ConverterConfig): import("graphql-compose").ObjectTypeComposer<any, any> | import("graphql-compose").InputTypeComposer<any> | import("graphql-compose").EnumTypeComposer<any> | import("graphql-compose").InterfaceTypeComposer<any, any> | import("graphql-compose").UnionTypeComposer<any, any> | import("graphql-compose").ScalarTypeComposer<any>;
export declare function parseFields(fields: AnyType, config: ConverterConfig): {};
export declare function parseArgs(anyArgs: Args, config: any): {};
